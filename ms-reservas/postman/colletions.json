{
	"info": {
		"_postman_id": "52371896-1371-4ac8-9f05-8fc35a8fce85",
		"name": "ms-reservas (OAuth2.0)",
		"description": "Colección Postman para probar ms-reservas, solicitudes y no disponibilidades con autenticación Keycloak OAuth2 Password. Incluye pruebas automatizadas de roles.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47645353",
		"_collection_link": "https://ayana-siegle-4708691.postman.co/workspace/Ayana-Natalia-Siegle-Clavijo's-~40948d75-815c-423e-846f-0ceabc09dfb2/collection/47645353-52371896-1371-4ac8-9f05-8fc35a8fce85?action=share&source=collection_link&creator=47645353"
	},
	"item": [
		{
			"name": "PROVEEDOR",
			"item": [
				{
					"name": "GET /reserva (200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('200 OK', ()=>pm.response.to.have.status(200));"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/reservas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"reservas"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /reserva (403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('403 Forbidden', ()=>pm.response.to.have.status(403));"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenName",
									"value": "http://localhost:8082",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{orgPass}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{orgUser}}",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "http://localhost:8090/realms/eventos/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"idSolicitud\": 1,\n  \"fechaReservaInicio\": \"2025-10-20T10:00:00\",\n  \"fechaReservaFin\": \"2025-10-21T10:00:00\",\n  \"estado\": \"CONFIRMADA\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/reservas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"reservas"
							]
						}
					},
					"response": []
				}
			],
			"description": "Rol PROVEEDOR: solo puede leer reservas (403 en creación).",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "password",
						"value": {
							"grant_type": "password",
							"client_authentication": "header",
							"accessTokenUrl": "{{tokenUrl}}",
							"clientId": "{{clientId}}",
							"clientSecret": "{{clientSecret}}",
							"scope": "openid",
							"username": "{{provUser}}",
							"password": "{{provPass}}"
						},
						"type": "any"
					}
				]
			}
		},
		{
			"name": "ORGANIZADOR",
			"item": [
				{
					"name": "GET /reserva (200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('200 OK', ()=>pm.response.to.have.status(200));"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/reservas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"reservas"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /solicitudes (201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('201 Created', ()=>pm.response.to.have.status(201));"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenName",
									"value": "http://localhost:8082",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{orgPass}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{orgUser}}",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "http://localhost:8090/realms/eventos/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fechaSolicitud\": \"2025-07-01T10:00:00\",\n  \"fechaInicio\": \"2025-07-10T10:00:00\",\n  \"fechaFin\": \"2025-09-10T12:00:00\",\n  \"idProovedor\": 1,\n  \"idOferta\": 2,\n  \"estadoSolicitud\": \"PENDIENTE\",\n  \"idOrganizador\": 3\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/solicitudes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"solicitudes"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /solicitudes/{id} (204)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('204 No Content', ()=>pm.expect(pm.response.code).to.be.oneOf([200,204]));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/solicitudes/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"solicitudes",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "Rol ORGANIZADOR: puede crear, modificar y ver reservas/solicitudes (2xx).",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "password",
						"value": {
							"grant_type": "password",
							"client_authentication": "header",
							"accessTokenUrl": "{{tokenUrl}}",
							"clientId": "{{clientId}}",
							"clientSecret": "{{clientSecret}}",
							"scope": "openid",
							"username": "{{orgUser}}",
							"password": "{{orgPass}}"
						},
						"type": "any"
					}
				]
			}
		},
		{
			"name": "ADMIN",
			"item": [
				{
					"name": "POST /no-disponibilidades (201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('201 Created', ()=>pm.response.to.have.status(201));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"idOferta\": 303,\n  \"motivo\": \"Mantenimiento preventivo del sistema eléctrico\",\n  \"fechaInicio\": \"2025-11-01T08:00:00\",\n  \"fechaFin\": \"2025-11-02T18:00:00\",\n  \"idReserva\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/no-disponibilidades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"no-disponibilidades"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /no-disponibilidades/{id} (204)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('204 No Content', ()=>pm.expect(pm.response.code).to.be.oneOf([200,204]));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/no-disponibilidades/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"no-disponibilidades",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "Rol ADMIN: puede realizar cualquier acción (reservas, solicitudes, no disponibilidades)."
		},
		{
			"name": "SIN TOKEN",
			"item": [
				{
					"name": "GET /reserva (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('401 Unauthorized', ()=>pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reserva",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reserva"
							]
						}
					},
					"response": []
				}
			],
			"description": "Solicitudes sin token deberían devolver 401 Unauthorized."
		},
		{
			"name": "AUTH - Obtener Token (ADMIN)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"pm.environment.set('token', jsonData.access_token);",
							"console.log('✅ Token guardado en variable de entorno:', jsonData.access_token);",
							"pm.test('Token generado correctamente', function () {",
							"    pm.expect(jsonData).to.have.property('access_token');",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenName",
							"value": "http://localhost:8082",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{orgPass}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{orgUser}}",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "http://localhost:8090/realms/eventos/protocol/openid-connect/token",
							"type": "string"
						},
						{
							"key": "clientSecret",
							"value": "{{clientSecret}}",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "{{clientId}}",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "password_credentials",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "client_secret",
							"value": "{{clientSecret}}"
						},
						{
							"key": "username",
							"value": "{{adminUser}}"
						},
						{
							"key": "password",
							"value": "{{adminPass}}"
						}
					]
				},
				"url": {
					"raw": "{{tokenUrl}}",
					"host": [
						"{{tokenUrl}}"
					]
				}
			},
			"response": []
		}
	]
}